# 2차원 배열을 xy 좌표계처럼 사용
# 상하좌우 탐색
# 현재 위치를 i, j라고 할 때 -> arr2[i][j]
# 상하좌우로 움직였을 때 i와 j가 어떻게 변하는가를 델타 배열로 기록
# di = [], dj = []

# 위로(상) 한 칸 이동한다면?
# 행 번호만 1 감소, 열 번호는 변화 없음 -> arr2[i-1][j]

# 아래로(하) 한 칸 이동한다면?
# 행 번호 1 증가, 열 번호 변화 없음 -> arr2[i+1][j]

# 왼쪽으로(좌) 한 칸 이동한다면?
# 행 번호는 변화 없음, 열 번호만 1 감소 -> arr2[i][j-1]

# 오른쪽으로(우) 한 칸 이동한다면?
# 행 번호 변화 없음, 열 번호만 1 증가 -> arr2[i][j+1]

# 각 방향으로 이동했을 때 좌표의 변화량을 배열로 기록 -> 델타 배열
#     상  하 좌  우 (순서는 마음대로)
di = [-1, 1, 0, 0]
dj = [0, 0, -1, 1]

# di[0] -> 위(상)로 갔을 때 i(행번호)의 변화 == -1
# dj[0] -> 위(상)로 갔을 때 j(열번호)의 변화 == 0

for d in range(4):
    ni = i +di[d]
    nj = j +dj[d]

# 오른쪽 위 대각선으로 한 칸 이동한다면?
# 위 -> 행번호가 1 감소, 오른쪽 -> 열번호가 1 증가 => arr2[i-1][j+1]
# 유효한 번호인가 검사
# 3*3 크기의 2차원 배열의 유효한 인덱스 범위?  0 <= i, j < 3
# 이 범위를 벗어나면 인덱스에러가 발생한다.
# 가로 = 3, 세로 = 3
# 유효한 인덱스인가요? 검사하는 함수
def is_valid(i, j):
    return 0 <= i < 세로 and 0 <= j < 가로
