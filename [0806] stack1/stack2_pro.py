# top과 크기가 고정된 자료구조인 배열을 활용해서 스택 만들기

# 스택 초기화
# top: 스택에 마지막으로 삽입된 원소의 위치(인덱스)를 나타낸다.
top = -1  # top이 -1이면 비어있는 것. top이 0이면 하나가 들어있는 것

# 스택의 크기
N = 10
# 스택 만들기
s = [0] * N

# 스택에 원소 삽입하기
for i in range(1, N+1):
    top += 1  # 삽입 하기 전에 마지막 위치 +1 해야함
    s[top] = i  # top 위치에 원소 삽입

print(s)

# 원소를 삽입하기 전에 스택이 다 찼나 확인
if top < N - 1:
    top += 1
    s[top] = 11
else:
    print('overflow')

print(top, s)

# 스택에서 원소 삭제
for i in range(10):
    print(s[top], end= " ")  # 교재처럼 pop, push 함수 만들 필요 없어! 그리고 헷갈리지 마라
    top -= 1
print()

# 크기가 고정된 배열과 top을 통해 스택을 구현한 경우 배열 안의 원소가 '진짜' 삭제 되지는 않음

# top을 보고 스택이 비었는지 여부를 판단!!
# [1, 2, 3, 4, 5] 이렇게 되어 있어도 top = -1이면 비어있다고 판단해야 함
print(top, s)

## 이것이 배열을 사용해 stack 구현 시 주의해야 할 점이!!!!!!!!!!!다!!!!